[config]
# List of available plugins for this configuration.  This just tells the configuration
# system that these exist.  It does not load them.  There should be a section for each
# configured plugin with the same name as is given here.
plugins = fgfs,xplane,canfix,command,test, net_int

# The following sections describe the individual plugins and their configuration

# Command Line Module
[command]
load = yes
module = plugins.command
prompt = FIX:
# If set quiting the command interpreter plugin
# will end execution of the program
quit = yes

# Network Interface
[net_int]
load = yes
module = plugins.net_int
host = 127.0.0.1
port = 8888

# FlightGear Flight Simulator Module
# To start FlightGear with these paramaters, use the following command...
#   >fgfs --generic=socket,bi,10,localhost,6789,udp,fix_fgfs
# The fix_fgfs.xml file should be in the FG_ROOT/Protocols directory which should be
# in one of the following locations...
# LINUX: /usr/share/games/flightgear/
# OSX: /Applications/FlightGear.app/Contents/Resources/data/
# WINDOWS: c:\Program Files\FlightGear\data\
[fgfs]
load = yes
module = plugins.fgfs
# This should be the same as $FG_ROOT on your system.  It is used to help
# fixgw find the xml configuration files
fg_root = /home/neil/Project/pyEfis/
# /usr/share/games/flightgear/
# fg_root = /Applications/FlightGear.app/Contents/Resources/data/
# fg_root = c:\Program Files\FlightGear\data\

# This is the name of the protocol config file that fixgw and fgfs will use to
# define the protocol. It is very important that both programs are looking at
# the same file.
xml_file = pyefis.xml
# UDP Ports used for communication to FlightGear.
host = localhost
port = 34200
# Update rate for sending data to FlightGear
rate = 10  # updates / second


[xplane]
load = yes
module = plugins.xplane
# IP address where the X-Plane simulator is running
ipaddress = 127.0.0.1
# UDP Ports to use for sending and receiving data
# These should match the configuration in the
# "Net Connections" Menu of X-Plane
udp_in = 49001   # Port to received data from X-Plane
udp_out = 49002  # Port to send data to X-Plane


# CAN-FIX
[canfix]
load = no
module = plugins.fg_canfix
config_file = confix.cfg


[test]
load = no
module = plugins.test


# Logging configuration - See Python logging.config module documenation
[loggers]
keys=root

[handlers]
#keys=file,stdout,syslog
keys=stderr

[formatters]
keys=form1

[logger_root]
# messages with levels below the one given will not be logged
#level=DEBUG
level=INFO
#level=WARNING
#level=ERROR
#level=CRITICAL

handlers=stderr
#handlers=file
#handlers=syslog
propagate=1

[handler_stderr]
class=StreamHandler
formatter=form1
args=(sys.stderr,)

[handler_file]
class=FileHandler
formatter=form1
args=('fixgw.log', 'w')

[handler_syslog]
class=handlers.SysLogHandler
formatter=form1
args=()

[formatter_form1]
format=%(levelname)s:%(asctime)s:%(name)s - %(message)s
datefmt=%Y%m%d-%H:%M:%S
class=logging.Formatter
